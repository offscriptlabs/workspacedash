"use strict";(self.webpackChunkworkspace_shipping_dashboard=self.webpackChunkworkspace_shipping_dashboard||[]).push([[884],{599:(t,e,r)=>{r.r(e),r.d(e,{proxyApiService:()=>s});const s=new class{constructor(){this.baseUrl="http://localhost:3001/api"}async getTrackingStatus(t,e,r){try{console.log("Making proxy API request for:",t);const s=await fetch(`${this.baseUrl}/tracking`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({trackingNumber:t,orderId:e,postalCode:r})});if(!s.ok)throw new Error(`Proxy API error: ${s.status}`);const a=await s.json();if(console.log("Proxy API response:",a),!a.success)throw new Error(a.error||"Failed to get tracking data");return a.data}catch(s){throw console.error("Proxy API request failed:",s),s}}async getBatchTrackingStatus(t){const e=t.map(async(t,e)=>{try{return await this.getTrackingStatus(t,`batch_${e}`)}catch(r){return console.error(`Failed to track ${t}:`,r),{trackingNumber:t,status:"pending",lastActivity:"",statusDescription:"Tracking unavailable"}}});return Promise.all(e)}}},884:(t,e,r)=>{r.d(e,{getTrackingService:()=>s});new class{constructor(){this.baseUrl="https://api.trackship.com/v1",this.apiKey=void 0,this.appName=void 0,this.apiKey="51f9e5fab6f00d5db7b4134cc8f6450b",this.appName="Workspace Shipping Dashboard",console.log("Trackship API Key configured:",this.apiKey?"Yes":"No"),console.log("App Name:",this.appName)}detectCarrier(t){return t.startsWith("1Z")?"ups":t.startsWith("940")||t.startsWith("93")?"usps":t.startsWith("DHL")||10===t.length?"dhl":12===t.length?"fedex":"ups"}async createShipment(t,e,r){if(!this.apiKey)throw new Error("Trackship API key not configured");console.log("Creating shipment for:",t),console.log("API Key:",this.apiKey.substring(0,10)+"...");try{const s={tracking_number:t,tracking_provider:this.detectCarrier(t),order_id:e,postal_code:r||"00000",destination_country:"US",app_name:this.appName};console.log("Request body:",s),console.log("Request URL:",`${this.baseUrl}/shipment/create/`);const a=await fetch(`${this.baseUrl}/shipment/create/`,{method:"POST",headers:{"Content-Type":"application/json","trackship-api-key":this.apiKey},body:JSON.stringify(s)});if(console.log("Response status:",a.status),console.log("Response headers:",Object.fromEntries(a.headers.entries())),!a.ok){const t=await a.text();throw console.error("API Error Response:",t),new Error(`Trackship API error: ${a.status} - ${t}`)}const i=await a.json();return console.log("API Response data:",i),i}catch(s){throw console.error("Trackship API request failed:",s),s}}parseStatus(t,e){const r=t.toLowerCase(),s=e.toLowerCase();return r.includes("delivered")||s.includes("delivered")?"delivered":r.includes("in_transit")||r.includes("picked_up")||s.includes("in transit")||s.includes("picked up")?"shipped":"pending"}async getTrackingStatus(t,e,r){try{console.log("Getting tracking status for:",t);const s=e||`order_${Date.now()}`,a=await this.createShipment(t,s,r);if(console.log("Shipment creation response:",a),"ok"!==a.status)throw new Error(`Failed to create shipment: ${a.status_msg}`);const i=this.detectCarrier(t),n={trackingNumber:t,status:"shipped",lastActivity:(new Date).toISOString(),estimatedDelivery:"2024-01-20",currentLocation:"Distribution Center",statusDescription:"Package in transit",carrier:i.toUpperCase()};return console.log("Parsed tracking result:",n),n}catch(s){throw console.error("Failed to get tracking status:",s),s}}async getBatchTrackingStatus(t){const e=t.map(async(t,e)=>{try{return await this.getTrackingStatus(t,`batch_${e}`)}catch(r){return console.error(`Failed to track ${t}:`,r),{trackingNumber:t,status:"pending",lastActivity:"",statusDescription:"Tracking unavailable"}}});return Promise.all(e)}};new class{async getTrackingStatus(t){await new Promise(t=>setTimeout(t,1e3));const e={UPS123456789:{status:"pending",carrier:"UPS"},FEDEX987654321:{status:"shipped",carrier:"FedEx"},USPS555666777:{status:"delivered",carrier:"USPS"},DHL888999000:{status:"shipped",carrier:"DHL"},"1Z999AA1234567890":{status:"shipped",carrier:"UPS"},"9400100000000000000000":{status:"delivered",carrier:"USPS"}}[t]||{status:"pending",carrier:"Unknown"};return{trackingNumber:t,status:e.status,lastActivity:(new Date).toISOString(),estimatedDelivery:"pending"===e.status?"2024-01-20":void 0,currentLocation:"shipped"===e.status?"Distribution Center":void 0,statusDescription:{pending:"Package information sent to carrier",shipped:"Package in transit",delivered:"Package delivered successfully"}[e.status],carrier:e.carrier}}async getBatchTrackingStatus(t){const e=t.map(t=>this.getTrackingStatus(t));return Promise.all(e)}};const s=()=>{const t=!0,e="51f9e5fab6f00d5db7b4134cc8f6450b",s=!0;console.log("Environment check:",{useRealApi:t,hasCredentials:!0,useProxy:s,apiKey:e?e.substring(0,10)+"...":"None"});{console.log("Using proxy API service");const{proxyApiService:t}=r(599);return t}}}}]);
//# sourceMappingURL=884.899ce9eb.chunk.js.map